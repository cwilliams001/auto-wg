#!/bin/bash
# Security monitoring script
# Generated by Auto-WG Ansible

LOGFILE="/var/log/security-check.log"
DATE=$(date '+%Y-%m-%d %H:%M:%S')

echo "[$DATE] Starting security check" >> "$LOGFILE"

# Function to log messages
log_message() {
    echo "[$DATE] $1" >> "$LOGFILE"
}

# Check for failed login attempts
FAILED_LOGINS=$(grep "Failed password" /var/log/auth.log | wc -l)
if [ "$FAILED_LOGINS" -gt 10 ]; then
    log_message "WARNING: $FAILED_LOGINS failed login attempts detected"
fi

# Check for successful logins
SUCCESSFUL_LOGINS=$(grep "Accepted" /var/log/auth.log | tail -5)
if [ -n "$SUCCESSFUL_LOGINS" ]; then
    log_message "Recent successful logins detected"
fi

# Check UFW status
UFW_STATUS=$(ufw status | grep "Status: active" | wc -l)
if [ "$UFW_STATUS" -eq 0 ]; then
    log_message "CRITICAL: UFW firewall is not active!"
fi

# Check fail2ban status
FAIL2BAN_STATUS=$(systemctl is-active fail2ban)
if [ "$FAIL2BAN_STATUS" != "active" ]; then
    log_message "CRITICAL: Fail2ban is not running!"
fi

# Check for banned IPs
BANNED_IPS=$(fail2ban-client status sshd | grep "Banned IP list" | cut -d: -f2 | wc -w)
if [ "$BANNED_IPS" -gt 0 ]; then
    log_message "INFO: $BANNED_IPS IPs currently banned by fail2ban"
fi

# Check system load
LOAD=$(uptime | awk '{print $NF}')
if (( $(echo "$LOAD > 2.0" | bc -l) )); then
    log_message "WARNING: High system load detected: $LOAD"
fi

# Check disk usage
DISK_USAGE=$(df / | awk 'NR==2 {print $5}' | sed 's/%//')
if [ "$DISK_USAGE" -gt 85 ]; then
    log_message "WARNING: Disk usage is at $DISK_USAGE%"
fi

# Check memory usage
MEM_USAGE=$(free | awk 'NR==2{printf "%.0f", $3*100/$2}')
if [ "$MEM_USAGE" -gt 90 ]; then
    log_message "WARNING: Memory usage is at $MEM_USAGE%"
fi

# Check for rootkits (quick scan)
if command -v rkhunter >/dev/null 2>&1; then
    rkhunter --check --skip-keypress --report-warnings-only >> "$LOGFILE" 2>&1
fi

# Check for world-writable files in sensitive directories
WORLD_WRITABLE=$(find /etc /usr/bin /usr/sbin -type f -perm -002 2>/dev/null | wc -l)
if [ "$WORLD_WRITABLE" -gt 0 ]; then
    log_message "WARNING: $WORLD_WRITABLE world-writable files found in system directories"
fi

# Check SSH configuration
SSH_ROOT_LOGIN=$(grep "^PermitRootLogin" /etc/ssh/sshd_config | grep -v "no" | wc -l)
if [ "$SSH_ROOT_LOGIN" -gt 0 ]; then
    log_message "INFO: Root login is permitted via SSH"
fi

# Check for users with empty passwords
EMPTY_PASSWORDS=$(awk -F: '($2 == "") {print $1}' /etc/shadow | wc -l)
if [ "$EMPTY_PASSWORDS" -gt 0 ]; then
    log_message "CRITICAL: $EMPTY_PASSWORDS users have empty passwords!"
fi

# Check WireGuard service status
WG_SERVICE_STATUS=$(systemctl is-active wg_service)
if [ "$WG_SERVICE_STATUS" != "active" ]; then
    log_message "WARNING: WireGuard service is not running"
fi

# Check for large log files
LARGE_LOGS=$(find /var/log -type f -size +100M 2>/dev/null | wc -l)
if [ "$LARGE_LOGS" -gt 0 ]; then
    log_message "INFO: $LARGE_LOGS log files are larger than 100MB"
fi

# Check for updates
UPDATES_AVAILABLE=$(apt list --upgradable 2>/dev/null | wc -l)
if [ "$UPDATES_AVAILABLE" -gt 10 ]; then
    log_message "INFO: $UPDATES_AVAILABLE package updates available"
fi

log_message "Security check completed"

# If critical issues found, you could send email/notification here
# CRITICAL_ISSUES=$(grep "CRITICAL" "$LOGFILE" | wc -l)
# if [ "$CRITICAL_ISSUES" -gt 0 ]; then
#     mail -s "Critical security issues on $(hostname)" admin@example.com < "$LOGFILE"
# fi